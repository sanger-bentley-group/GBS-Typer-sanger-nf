import argparse
import unittest
from unittest.mock import patch, call, ANY

from translate_pbp_genes import SeqData, get_arguments, write_seq_dict, main

class TestTranslatePBPGenes(unittest.TestCase):
    TEST_SEQ_DATA = 'test_data/input/test_blactam_contig_fragments.fasta'
    TEST_OUTPUT = 'test_data/output/GBS1A-1.faa'
    TEST_OUTPUT_MAIN = 'test_data/output/GBS1A-1_main.faa'


    def test_read_seq_data(self):
        """
        Test output of sequence data
        """
        seq_data_to_analyse = SeqData(self.TEST_SEQ_DATA)
        actual = seq_data_to_analyse.get_data()

        self.assertEqual(actual['GBS1A-1_.26077_6_118.11:39458-40418(+)'], 'GACATCTACAACAGTGACACTTACATCGCTTATCCAAACAATGAATTACAAATAGCATCTACCATCATGGATGCGACTAATGGTAAAGTCATTGCACAATTAGGCGGGCGTCATCAGAATGAAAATATTTCATTTGGGACAAATCAATCTGTCTTAACAGACCGCGATTGGGGTTCTACAATGAAACCTATCTCAGCTTATGCACCTGCTATTGATAGTGGTGTCTATAATTCAACAGGTCAATCATTAAACGACTCAGTTTACTACTGGCCTGGTACTTCTACTCAACTATATGACTGGGATCGTCAATATATGGGTTGGATGAGTATGCAGACCGCTATTCAACAATCACGTAACGTCCCTGCTGTCAGAGCACTTGAAGCCGCTGGATTAGACGAAGCAAAATCTTTCCTTGAAAAATTAGGCATATACTATCCAGAAATGAACTATTCAAATGCTATTTCAAGTAACAACAGTAGCAGTGATGCAAAATATGGTGCAAGTAGTGAGAAAATGGCAGCGGCTTACTCGGCTTTTGCAAACGGCGGAACTTACTATAAACCGCAATATGTTAATAAAATTGAATTTAGCGATGGAACCAATGATACTTATGCAGCGTCTGGTAGCCGTGCGATGAAAGAGACTACTGCCTACATGATGACGGATATGCTGAAAACAGTACTAACATTTGGTACTGGTACTAAAGCAGCTATCCCTGGTGTTGCACAAGCTGGTAAGACTGGTACTTCCAACTATACGGAAGATGAGTTAGCTAAAATTGAAGCAACTACTGGTATCTACAATAGCGCCGTTGGTACAATGGCTCCTGATGAAAACTTTGTCGGCTATACTTCTAAGTACACAATGGCAATTTGGACTGGTTATAAAAATCGCCTTACACCACTTTATGGTAGCCAACTGGATATTGCTACTGAGGTTTATCGTGCAATGATGTCCTAC')


    def test_six_frame_translate(self):
        """
        Test amino acid sequence translation
        """
        seq_data_to_analyse = SeqData(self.TEST_SEQ_DATA)
        seq_data_to_analyse.translate_content(1)
        seq_data = seq_data_to_analyse.get_data()

        self.assertEqual(seq_data['GBS1A-1_.26077_6_118.11:39458-40418(+)'], 'DIYNSDTYIAYPNNELQIASTIMDATNGKVIAQLGGRHQNENISFGTNQSVLTDRDWGSTMKPISAYAPAIDSGVYNSTGQSLNDSVYYWPGTSTQLYDWDRQYMGWMSMQTAIQQSRNVPAVRALEAAGLDEAKSFLEKLGIYYPEMNYSNAISSNNSSSDAKYGASSEKMAAAYSAFANGGTYYKPQYVNKIEFSDGTNDTYAASGSRAMKETTAYMMTDMLKTVLTFGTGTKAAIPGVAQAGKTGTSNYTEDELAKIEATTGIYNSAVGTMAPDENFVGYTSKYTMAIWTGYKNRLTPLYGSQLDIATEVYRAMMSY')


    def test_write_seq_file(self):
        """
        Test output of seq file
        """
        seq_data_to_analyse = SeqData(self.TEST_SEQ_DATA)
        seq_data_to_analyse.translate_content(1)
        seq_data = seq_data_to_analyse.get_data()
        write_seq_dict(seq_data, self.TEST_OUTPUT)
        fo = open(self.TEST_OUTPUT, 'r')

        self.assertEqual(fo.readlines(), ['>GBS1A-1_.26077_6_118.11:39458-40418(+)\n', 'DIYNSDTYIAYPNNELQIASTIMDATNGKVIAQLGGRHQNENISFGTNQSVLTDRDWGSTMKPISAYAPAIDSGVYNSTGQSLNDSVYYWPGTSTQLYDWDRQYMGWMSMQTAIQQSRNVPAVRALEAAGLDEAKSFLEKLGIYYPEMNYSNAISSNNSSSDAKYGASSEKMAAAYSAFANGGTYYKPQYVNKIEFSDGTNDTYAASGSRAMKETTAYMMTDMLKTVLTFGTGTKAAIPGVAQAGKTGTSNYTEDELAKIEATTGIYNSAVGTMAPDENFVGYTSKYTMAIWTGYKNRLTPLYGSQLDIATEVYRAMMSY\n'])


    def test_arguments(self):
        actual = get_arguments().parse_args(
            ['--blactam_fasta', 'fasta_file', '--output_file', 'out_file'])
        self.assertEqual(actual, argparse.Namespace(fasta='fasta_file', output='out_file'))


    def test_arguments_short_options(self):
        actual = get_arguments().parse_args(
            ['-f', 'fasta_file', '-o', 'out_file'])
        self.assertEqual(actual, argparse.Namespace(fasta='fasta_file', output='out_file'))


    @patch('translate_pbp_genes.get_arguments')
    def test_main(self, mock_get_arguments):
        args = mock_get_arguments.return_value.parse_args()
        args.fasta = self.TEST_SEQ_DATA
        args.output = self.TEST_OUTPUT_MAIN
        main()
        fo = open(self.TEST_OUTPUT_MAIN, 'r')

        self.assertEqual(fo.readlines(), ['>GBS1A-1_.26077_6_118.11:39458-40418(+)\n', 'DIYNSDTYIAYPNNELQIASTIMDATNGKVIAQLGGRHQNENISFGTNQSVLTDRDWGSTMKPISAYAPAIDSGVYNSTGQSLNDSVYYWPGTSTQLYDWDRQYMGWMSMQTAIQQSRNVPAVRALEAAGLDEAKSFLEKLGIYYPEMNYSNAISSNNSSSDAKYGASSEKMAAAYSAFANGGTYYKPQYVNKIEFSDGTNDTYAASGSRAMKETTAYMMTDMLKTVLTFGTGTKAAIPGVAQAGKTGTSNYTEDELAKIEATTGIYNSAVGTMAPDENFVGYTSKYTMAIWTGYKNRLTPLYGSQLDIATEVYRAMMSY\n'])
